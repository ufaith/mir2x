# data file for the Fltk User Interface Designer (fluid)
version 1.0302 
use_FL_COMMAND 
header_name {.hpp} 
code_name {.cpp}
decl {\#include <string>} {private local
} 

decl {\#include <cstring>} {private local
} 

decl {\#include <algorithm>} {private local
} 

decl {\#include <FL/fl_ask.H>} {private local
} 

decl {\#include "filesys.hpp"} {private local
} 

decl {\#include "mathfunc.hpp"} {private local
} 

class ValidWilFileWindow {open
} {
  Function {ValidWilFileWindow()} {open
  } {
    Fl_Window m_Window {
      callback {{
	// disable the close button
}} open
      private xywh {1367 268 485 375} type Double labelfont 4 resizable visible
    } {
      Fl_Browser m_ValidWilFileBrowser {
        callback {{
    if(!Fl::event_clicks()){
        return;
    }
    for(int i = 1; i <= m_ValidWilFileBrowser->size(); ++i){
        if(m_ValidWilFileBrowser->selected(i)){
            std::string szText = m_ValidWilFileBrowser->text(i);
            std::size_t nFind1; // "Mon-"
            std::size_t nFind2; // ".wil"

            nFind1 = szText.rfind("Mon-");
            nFind2 = szText.rfind(".wil");

            std::string szPathName  = szText.substr(0, nFind1 - 1);
            std::string szFileName0 = szText.substr(nFind1, nFind2 - nFind1);

            std::string szFileName1 = szFileName0;
            szFileName1.replace(szFileName1.find("Mon-"), 4, "MonS-");

            extern WilImagePackage g_WilImagePackage[2];


            if(false 
                    || !g_WilImagePackage[0].Load(szPathName.c_str(), szFileName0.c_str(), "wil")
                    || !g_WilImagePackage[1].Load(szPathName.c_str(), szFileName1.c_str(), "wil")
                    ||  g_WilImagePackage[0].ImageCount() != g_WilImagePackage[0].IndexCount()
                    ||  g_WilImagePackage[1].ImageCount() != g_WilImagePackage[1].IndexCount()
                    ||  g_WilImagePackage[0].ImageCount() != g_WilImagePackage[1].ImageCount()
              ){
                fl_alert("Invalid .WIL file set: %s", szFileName0.c_str());
            }else{
                int32_t nCount = g_WilImagePackage[0].IndexCount();
                int32_t nMaxValidIndex = nCount;
                for(int nIndex = 0; nIndex < nCount; ++nIndex){
                    extern ProgressBarWindow *g_ProgressBarWindow;
                    g_ProgressBarWindow->SetValue(nIndex * 100 / nCount);
                    g_ProgressBarWindow->Redraw();
                    g_ProgressBarWindow->ShowAll();
                    Fl::check();

                    if(true
                            && g_WilImagePackage[0].SetIndex(nIndex)
                            && g_WilImagePackage[0].CurrentImageValid()
                            && g_WilImagePackage[1].SetIndex(nIndex)
                            && g_WilImagePackage[1].CurrentImageValid()
                      ){
                        nMaxValidIndex = nIndex;
                    }
                }

                // printf("%d\\n", nMaxValidIndex);
                extern ProgressBarWindow *g_ProgressBarWindow;
                g_ProgressBarWindow->HideAll();

                extern ValidAnimationWindow *g_ValidAnimationWindow;
                g_ValidAnimationWindow->SetFileIndex(i);
                g_ValidAnimationWindow->CheckValidAnimation(nMaxValidIndex);
                g_ValidAnimationWindow->ShowAll();
                m_Window->hide();
                return;
            }
        }
    }
}} selected
        private xywh {0 0 485 375} type Hold labelfont 4 textfont 4 resizable
        code0 {\#include "wilimagepackage.hpp"}
        code1 {\#include "progressbarwindow.hpp"}
        code2 {\#include "validanimationwindow.hpp"}
        code3 {\#include <FL/Fl.H>}
      }
    }
  }
  Function {ShowAll()} {open return_type void
  } {
    code {{
	m_Window->show();
}} {}
  }
  Function {CheckValidWilFile(const char *szWilFolderName)} {return_type void
  } {
    code {{
    extern const char *g_MonsterWilFileNameList[];
    const char **szMonsterWilFileNameList = g_MonsterWilFileNameList;
    
    m_ValidWilFileBrowser->clear();
    
    std::string szWilFileName;
    for(int nCnt = 0; std::strlen(szMonsterWilFileNameList[nCnt]) > 0; ++nCnt){
        szWilFileName = szWilFolderName;
        if(szWilFileName.back() != '/'){
            szWilFileName += "/";
        }
        szWilFileName += szMonsterWilFileNameList[nCnt];
        if(FileSys::FileExist((szWilFileName + ".wil").c_str()) && FileSys::FileExist((szWilFileName + ".wix").c_str())){
            auto szWilFileName2 = szWilFileName;
            std::string szKey("Mon-");
            std::size_t nFound = szWilFileName.rfind(szKey);
            if (nFound != std::string::npos){
                szWilFileName.replace(nFound, szKey.length(), "MonS-");
            }else{
                continue;
            }
            if(FileSys::FileExist((szWilFileName + ".wil").c_str()) && FileSys::FileExist((szWilFileName + ".wix").c_str())){
                m_ValidWilFileBrowser->add((szWilFileName2 + ".wil").c_str());
            }
        }
    }
}} {}
  }
} 
