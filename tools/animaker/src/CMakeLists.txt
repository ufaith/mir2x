FILE(GLOB FLTK_ALL_SRC "*.[fF][lL]")

SET(FLTK_CPP_SRC "")

FOREACH(FLTK_SRC ${FLTK_ALL_SRC})
    # generate fltk output source file name
    GET_FILENAME_COMPONENT(T_BASENAME ${FLTK_SRC} NAME_WE)
    SET(T_OUT_CPPNAME ${T_BASENAME}.cpp)
    SET(T_OUT_HPPNAME ${T_BASENAME}.hpp)

    SET(FLTK_CPP_SRC
        ${FLTK_CPP_SRC}
        ${CMAKE_CURRENT_BINARY_DIR}/${T_OUT_HPPNAME}
        ${CMAKE_CURRENT_BINARY_DIR}/${T_OUT_CPPNAME})

    ADD_CUSTOM_COMMAND(OUTPUT ${T_OUT_HPPNAME} ${T_OUT_CPPNAME}
        DEPENDS ${FLTK_SRC}
        COMMAND fluid -c -o ${T_OUT_CPPNAME} -h ${T_OUT_HPPNAME} ${FLTK_SRC}
        WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
        )
ENDFOREACH()

AUX_SOURCE_DIRECTORY(. ANIMAKER_SRC)
ADD_EXECUTABLE(animaker ${ANIMAKER_SRC} ${FLTK_CPP_SRC})

TARGET_INCLUDE_DIRECTORIES(animaker PRIVATE ${COMMON_SOURCE_DIR})
TARGET_INCLUDE_DIRECTORIES(animaker PRIVATE ${CMAKE_CURRENT_BINARY_DIR})
TARGET_INCLUDE_DIRECTORIES(animaker PRIVATE ${CMAKE_CURRENT_LIST_DIR})

TARGET_LINK_LIBRARIES(animaker ${FLTK_LIBRARIES}  )
TARGET_LINK_LIBRARIES(animaker ${OPENGL_LIBRARIES})
TARGET_LINK_LIBRARIES(animaker dl                 )
TARGET_LINK_LIBRARIES(animaker tinyxml2           )
TARGET_LINK_LIBRARIES(animaker common             )
TARGET_LINK_LIBRARIES(animaker png                )
