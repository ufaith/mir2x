# data file for the Fltk User Interface Designer (fluid)
version 1.0302 
header_name {.hpp} 
code_name {.cpp}
decl {\#include <asio.hpp>} {public global
} 

decl {\#include <ctime>} {public global
} 

decl {\#include <string>} {public global
} 

decl {\#include <mutex>} {private local
} 

class MainWindow {open
} {
  Function {MainWindow()} {open
  } {
    Fl_Window m_Window {
      label {Scene Server}
      callback {{
	// do nothing
}} open
      xywh {1587 428 720 400} type Double labelfont 4 resizable visible
    } {
      Fl_Menu_Bar {} {open
        xywh {0 0 721 25} box FLAT_BOX labelfont 4 textfont 4
      } {
        Submenu {} {
          label Server open
          xywh {0 0 62 20} labelfont 4
        } {
          MenuItem {} {
            label {Launch          }
            callback {{
	extern MonoServer *g_MonoServer;
	delete g_MonoServer;
	
	g_MonoServer = new MonoServer();
	g_MonoServer->Launch();
}}
            xywh {0 0 30 20} shortcut 0x4006c labelfont 4 divider
            code0 {\#include "monoserver.hpp"}
          }
          MenuItem {} {
            label Pause
            xywh {10 10 30 20} shortcut 0x40070 labelfont 4 divider
          }
          MenuItem {} {
            label Quit
            callback {{
	exit(0);
}}
            xywh {20 20 30 20} labelfont 4
          }
        }
        Submenu {} {
          label Configure open
          xywh {0 0 62 20} labelfont 4
        } {
          MenuItem {} {
            label {Server          }
            callback {{
	extern ServerConfigureWindow	*g_ServerConfigureWindow;
	g_ServerConfigureWindow->ShowAll();
}}
            xywh {10 10 30 20} labelfont 4
            code0 {\#include "serverconfigurewindow.hpp"}
          }
          MenuItem {} {
            label {Network            }
            callback {{
	extern DatabaseConfigureWindow	*g_DatabaseConfigureWindow;
	g_DatabaseConfigureWindow->ShowAll();
}}
            xywh {0 0 30 20} labelfont 4
            code0 {\#include "databaseconfigurewindow.hpp"}
          }
        }
        Submenu {} {
          label Command open
          xywh {15 15 62 20} labelfont 4
        } {
          MenuItem {} {
            label {Add Monster        }
            callback {{
	extern AddMonsterWindow	*g_AddMonsterWindow;
    	g_AddMonsterWindow->Refresh();
    	g_AddMonsterWindow->ShowAll();
}}
            xywh {15 15 30 20} labelfont 4
            code0 {\#include "addmonsterwindow.hpp"}
          }
        }
      }
      Fl_Browser m_Browser {
        xywh {0 24 720 375} type Hold labelfont 4 textfont 4 resizable
      }
    }
  }
  Function {ShowAll()} {} {
    code {{
    m_Window->show();
}} {}
  }
  Function {AddLog(int nLogType, const char *szMessage)} {open
  } {
    code {// AddLog(int nLogType, const char *szMessage)
{
	std::time_t stRes = std::time(nullptr);
	std::string szFullMessage = std::asctime(std::localtime(&stRes));
	szFullMessage.back() = ' ';
	switch(nLogType){
		case 0:
			szFullMessage = "@C4" + szFullMessage + "  " + szMessage;
			break;
		case 1:
			szFullMessage = "@C9" + szFullMessage + "  " + szMessage;
			break;
		default:
			szFullMessage = "@C1" + szFullMessage + "  " + szMessage;
			break;
		}

    if(m_Browser->size() > 1000){
        m_Browser->remove(1);
    }

	m_Browser->add(szFullMessage.c_str());
	m_Browser->bottomline(m_Browser->size());
}} {selected
    }
  }
} 
